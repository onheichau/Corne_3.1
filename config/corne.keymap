/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC         &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y      &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LEFT_SHIFT  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H      &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp RCTRL       &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp LEFT_ALT
                              &kp LGUI  &mo 1  &kp SPACE    &kp SPACE  &mo 2  &kp TAB
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE         &kp N1       &kp N2  &kp N3        &kp N4         &kp N5    &kp N6      &kp N7             &kp N8        &kp N9         &kp N0       &kp PIPE
&kp TAB           &kp LG(TAB)  &trans  &kp LPAR      &kp RPAR       &trans    &kp LEFT    &kp DOWN           &kp UP        &kp RIGHT      &kp ENTER    &kp LEFT_COMMAND
&kp LEFT_CONTROL  &trans       &trans  &kp LG(DLLR)  &kp LG(PRCNT)  &trans    &kp KP_DOT  &kp LC(LA(ENTER))  &kp LG(LEFT)  &kp LG(RIGHT)  &kp KP_PLUS  &kp KP_MINUS
                                       &trans        &trans         &trans    &trans      &kp RIGHT_SHIFT    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE  &kp EXCL  &kp AT  &kp HASH  &kp DLLR        &kp PRCNT        &kp CARET  &kp AMPS   &kp ASTRK  &kp MINUS  &kp UNDER  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans          &kp LG(SPACE)    &kp PLUS   &kp EQUAL  &kp LBKT   &kp RBKT   &kp ENTER  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans          &trans           &trans     &kp PLUS   &kp LBRC   &kp RBRC   &kp PIPE   &kp TILDE
                             &kp LGUI  &kp LEFT_SHIFT  &kp SPACE        &kp RET    &trans     &kp RALT
            >;
        };
    };
};
