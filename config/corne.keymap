/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC         &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y      &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LEFT_SHIFT  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H      &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp RCTRL       &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp LEFT_ALT
                              &kp LGUI  &mo 1  &kp SPACE    &kp SPACE  &mo 2  &kp TAB
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE     &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_4  &kp KP_NUMBER_5     &kp KP_NUMBER_6  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMBER_0  &kp BACKSLASH
&kp TAB       &trans           &trans           &trans           &kp LG(KP_PLUS)  &kp LG(KP_MINUS)    &kp LEFT         &kp DOWN         &kp UP           &kp RIGHT        &kp ENTER        &trans
&kp LEFT_ALT  &trans           &trans           &kp LG(DLLR)     &kp LG(PRCNT)    &kp O               &kp KP_DOT       &kp LC(LA(A))    &kp LG(LEFT)     &kp LG(RIGHT)    &trans           &trans
                                                &trans           &trans           &trans              &trans           &kp RIGHT_SHIFT  &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE                             &kp EXCL  &kp AT  &kp HASH              &kp DLLR               &kp PRCNT        &kp CARET    &kp AMPS          &kp KP_ASTERISK    &kp KP_MINUS  &kp UNDER  &kp BACKSLASH
&kp TAB                               &trans    &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LG(SPACE)    &kp KP_PLUS  &kp LBRC          &kp RIGHT_BRACE    &kp KP_EQUAL  &kp ENTER  &trans
&kp GLOBE  &trans    &trans  &trans                &trans                 &trans           &trans       &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans        &trans     &trans
                                                        &kp LGUI              &kp LEFT_SHIFT         &kp SPACE        &kp RET      &trans            &trans
            >;
        };
    };
};
